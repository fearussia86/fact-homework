<!doctype html>
<html lang="ru">


<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Дополнительные задания с урока 14.07.2022 по PHP</title>
    <link rel="stylesheet" href="css/style.css">
</head>
<body>

<header>
    <h1>ВЫПОЛНЕНИЕ ЗАДАНИЙ ПО PHP (1-4), со страницы 19, презентация урока 3-4.</h1>


</header>

<nav>
    <div class="nav_item"><a href="index.php">ГЛАВНАЯ</a></div>
    <div class="nav_item"><a href="picture.php">КАРТИНКА (утро/ночь)</a></div>
    <div class="nav_item"><a href="tasks1-4.php">ЗАДАНИЕ (1-4)</a></div>
    <div class="nav_item"><a href="task-14072022.php">ДОП. ЗАДАНИЯ ПО PHP</a></div>
    <div class="nav_item"><a href="form.php">ФОРМА АВТОРИЗАЦИИ</a></div>
    <div class="nav_item"><a href="bd.php">БАЗА ДАННЫХ</a></div>
</nav>

<section>
    <h2>Задание №1</h2>

    <p>Даны положительные действительные числа A,X,E. В последовательности y(1), y(2),... , образованной по закону y(0)=A; y(i)=0.5 [y(i-1)+x/y(i-1)] , i=1,2,3,... , найти первый член y(n), для которого выполнено неравенство yi2-yi-12  <  E.
    </p>
<p class="decision">ОТВЕТ: Не могу решить. </p>

</section>


<section>
    <h2>Задание №2</h2>
    <p>Число  Пи  вычисляется  по  формуле  Грегори  следующим образом:  РI=4(1-1/3+1/5-1/7+1/9-...), причем, чем больше слагаемых в скобках, тем выше точность вычисления числа Пи. Определить минимальное количество слагаемых для вычисления Пи с точностью 0.01</p>
    <p class="decision">ОТВЕТ: В процессе решения. </p>
</section>


<section>
    <h2>Задание №3</h2>
    <p>Дана последовательность, состоящая из дробей: 1/1, 4/2, 7/3, 10/4,... Какое минимальное количество элементов последовательности нужно сложить, чтобы сумма превысила заданное число S > 1?
    </p>

    <?php
    $nomination = 1;
    $denomination = 1;
    $result1 = $nomination/$denomination;
    $sum=0;
    $count1 = 0;

    while ($sum  < 1) {
        $nomination += 3;
        $denomination += 1;
        $result1 = $nomination/$denomination;
        $sum += $result1;
        $count1 +=1;

        echo "Значение переменной а: $nomination <br>";
        echo "Значение переменной b: $denomination <br>";
        echo "Значение переменной result: $result1 <br>";
        echo "Значение переменной summ (сумма) : $sum <br>";
        echo "Значение счетчика count равно $count1 <br>";

        echo "===================================<br>";




    }
    ?>

    <p class="decision">
НАШ ОТВЕТ:
        <?php echo "Нужно сложить минимальное количество элементов последовательности равным $count1, чтобы сумма превысила заданное число S > 1"?>

    </p>
</section>


<section>
    <h2>ЗАДАНИЕ №4</h2>
    <p>Дана последовательность, состоящая из дробей: 1/1, 4/2, 7/3, 10/4,... Какое минимальное количество элементов последовательности нужно сложить, чтобы сумма превысила заданное число S > 10? </p>

    <?php

    $a = 1;
    $b = 1;
    $result = $a/$b;
    $summ=1;
    $count = 0;


    while ($summ < 10) {

        $a += 3;
        $b += 1;
        $result = $a / $b;
        $summ += $result;
        $count +=1;

        echo "Значение переменной а: $a. <br>";
        echo "Значение переменной b: $b. <br>";
        echo "Значение переменной result: $result. <br>";
        echo "Значение переменной summ (сумма) : $summ. <br>";
        echo "Значение счетчика count равно $count <br>";

        echo "===================================<br>";




    }

    echo "Чтобы сумма превысила заданное число S > 10, нужно сложить минимальное количество элементов,  $count <br>";


    ?>

</section>


<section>
    <h2>Задания №6 и №7 - аналогичны заданию №4</h2>
    <p>Дана  последовательность,  состоящая из дробей: 1/2, 3/4, 5/6, 7/8, ... Какое минимальное количество элементов последовательности нужно сложить, чтобы сумма превысила заданное число S > 10?
    </p>

    <p class="decision">ВЫПОЛНИТЬ ПО АНАЛОГИИ С ЗАДАНИЕМ №6</p>

</section>

<section>

    <h2>ЗАДАНИЕ №7</h2>
<p>Дан одномерный массив из 1000 элементов, состоящий из случайных целых чисел в диапазоне от 0 до 50. Найти сумму элементов массива, с начала массива, до первого элемента равного нулю.
</p>

    <p class="decision">Не знаю как собрать сумму массива от начала до первого элемента, который равным стал при генерации, нулю. </p>

    <?php
    $summ_zero =0;
    $arr = array();
    for ($i = 0; $i <=1000; $i++) {
        $elem[$i] = rand(0, 50);
        array_push($arr, $elem[$i]);


    }


    for ($i = 0; $i <=1000; $i++) {
        if($elem[$i] == 0) break;
        else {
            $summ_zero += $elem[$i];

        }

    }

    $summ_arr = array_sum($arr);

    print_r($arr);
    echo "<br>";
    echo "Первый элемент массива $arr[0] <br>";
    echo "Сумма массива  с начала массива до первого элемента, равного нулю: $summ_zero <br>";
    echo "Вся сумма массива $summ_arr <br>";

//До сюда код работает верно.

    ?>


</section>


<section>

    <h2>ЗАДАНИЕ №8</h2>
    <p>Дан одномерный массив из 1000 элементов, состоящий из случайных целых чисел в диапазоне от 0 до 9. Найти произведение элементов массива, с конца массива до первого элемента, равного нулю.</p>



    <?php
    //Положили элементы в массив, вывели массив.

    //Далее надо сделать обратный массив, чтобы найти с конца массива произведение элементов до первого элемента массива равного 0.
    //Далее через цикл while перебрать обратный массив и положить элементы в другой массив и вывести произведение всех элементов небольшого массива, до первого элемента равного 0.

    $arr2 = array();

    $summ_multiplication = 0;
    for ($s8 = 0; $s8 <=1000; $s8++) {
        $elem2[$s8] = rand(0, 9);
        array_push($arr2, $elem2[$s8]);
        //Создали массив на основе случайных чисел от 0 до 9, в количестве 1000 элементов.
    }

    $arr2_reverse = array_reverse($arr2);
    //Создали обратный массив, чтобы начать перебор с конца массива и вычислить
    // произведение элементов массива, с конца массива до первого элемента, равного нулю.
    $summ2 = 1;
    for ($z = 0; $z <=1000; $z++) {
        if($arr2_reverse[$z] == 0) break;
        else {

            $summ2 *= $arr2_reverse[$z];
            //Производим вычисление произведения элементов массива с конца массива до первого элемента, равного 0.
        }
    }

    $summ_mult_arr = array_sum($arr2);




    print_r($arr2);
    echo "<br>";
    echo "Произведение элементов массива, с конца массива до первого элемента, равного нулю, посчитана и составляет: $summ2 <br>";
    echo "Общая сумма произведений элементов массива посчитана и составляет: $summ_mult_arr <br>";
    ?>

</section>

<section>
    <p>РЕШЕНИЕ ОТ РУКОВОДИТЕЛЯ ЗАДАЧИ №8</p>

    <?php
    $arr = [];
    $pr =1 ;

    for ($i = 0; $i <1000; $i++) {
        $arr[$i] = rand(0, 9);
    }

    for ($i = 999; $i >=0; $i--) {
        if($arr[$i] == 0) break;
        else {
            $pr *= $arr[$i];
        }
    }
    //вывод pr

    print_r($arr2);
    echo "<br>";
    echo "Произведение элементов массива, с конца массива до первого элемента, равного нулю, посчитана и составляет: $pr <br>";

    ?>


</section>




<section>
   <h2>Задание №9</h2>
    <p>Дан одномерный массив из 1000 элементов, состоящий из случайных целых чисел в диапазоне от -5 до 50. Найти сумму элементов массива, с конца массива, до первого отрицательного элемента.</p>

    <?php
    $arr9 = array();
    $summ9 = 0;

    for ($s9 = 0; $s9 <= 1000; $s9++) {
        $elem9[$s9] = rand(-5, 50);
        array_push($arr9, $elem9[$s9]);

    }

    print_r($arr9);

    for ($s9=0; $s9<=1000; $s9++) {
        if($elem9[$s9] < 0) break;
        else {
            $summ9 += $elem9[$s9];
        }
    }

    $summ_mult_arr = array_sum($arr9);

    ?>


</section>


<section>
    <h2>ОПЕРАЦИИ С ФАЙЛАМИ</h2>




  <?php

if ($handle = opendir('/OpenServer/domains/php-fact/')) {
    echo "Дескриптор каталога: $handle\n";
    echo "Элементы:\n";

    /* Именно такой способ чтения элементов каталога является правильным. */
    while (($entry = readdir($handle)) != false) {
        echo "$entry\n <br>";
    }

    /* Это НЕВЕРНЫЙ способ обхода каталога. */
    while ($entry = readdir($handle)) {
        echo "$entry\n <br>";
    }

    closedir($handle);
}

?>




</section>
</body>
</html>